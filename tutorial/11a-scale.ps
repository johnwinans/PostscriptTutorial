%!PS

%   Postscript Tutorial Notes
%
%    Copyright (C) 2019 John Winans
%
%    This program is free software: you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation, either version 3 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program.  If not, see <https://www.gnu.org/licenses/>.

% A procedure to convert from inches to points
% stack: n  ->  n
/in { 72 mul } def

% A procedure to convert from millimeters to points
% stack: n  ->  n
/mm { 2.83465 mul } def

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% a fiducial-drawing subroutine
% stack: x y

/Fiducial {
    gsave
    0 .5 1 setrgbcolor
    newpath
    2 copy              % x y x y
    10 0 360 arc        % x y
    moveto              % -
    0 -20 rmoveto       % move to bottom of vertical line
    0 40 rlineto        % vertical cross-hair
    -20 -20 rmoveto     % move to left end of horizontal crosshair 
    40 0 rlineto        % horizontal crosshair
    .1 setlinewidth
    stroke
    grestore
} def


% Draw a string at the current position but don't move the current position
/DrawString { gsave (0123456789 abcdefghijklmnopqrstuvwxyz) show grestore } def


/FontHeight 9 mm def

/NewCenturySchlbk-Bold findfont FontHeight scalefont setfont


newpath
.5 in 5.5 in				% 36.0 396.0
2 copy						% 36.0 396.0 36.0 396.0

Fiducial					% 36.0 396.0	put a fiducial at .5, 5.5 (inches)
moveto						% -				move to the center of the fiducial

DrawString					% -				show text at 36.0 396.0
0 FontHeight rmoveto		% -				move up one baseline height
DrawString					% -

0 FontHeight rmoveto		% - 			move up one baseline height
1 .5 scale					% -				scale Y dimension by 1/2
DrawString					% -				show more (scaled) text

0 FontHeight rmoveto		% -				rmoveto here will be scaled!
.5 1 scale					% -				scale X by 1/2 (Y still is from earlier)
DrawString					% -				show more (scaled) text

0 FontHeight rmoveto		% -				move up one (scaled) baseline height
.5 .5 scale					% -				now scale X and Y (1/4 or original size)

currentpoint				% x y			put the current point into the stack
Fiducial					% -				draw a (scaled) fiducial at the current point
DrawString					% -				show more (scaled) text

0 1 in rmoveto				% -				move 1 inch up
currentpoint				% x y 			put the current point into the stack
Fiducial					% -				draw a (scaled) fiducial

0 1 in rmoveto				% -				move 1 inch up

% keep on going from here... note that the scale will persist.  Why wouldn't it?
4 {
	currentpoint			% x y			put the current point into the stack
	Fiducial				% -				draw a (scaled) fiducial
	DrawString				% -				show more (scaled) text
	0 FontHeight rmoveto	% -				move up one (scaled) baseline height
	2 2 scale				% -				embiggen things!
} repeat


showpage
